{"version":3,"sources":["Components/User/User.js","Components/User/UserList.js","Components/UserForm/FormInput.js","Components/Things/SubmitResetCustomButtonGroup.js","Components/Things/CloseButtonRight.js","Components/UserForm/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["User","username","age","Row","className","Col","Card","Body","Text","UserList","memo","users","undefined","length","map","user","key","FormInput","id","labelValue","placeHolder","onChangeHandler","onBlur","value","message","type","touched","isInputValid","Form","Group","controlId","Label","Control","name","placeholder","onChange","isInvalid","isValid","Feedback","SubmitResetCustomButtonGroup","buttonDirection","isDisabled","buttonGap","submitButtonValue","resetButtonValue","onResethandler","direction","gap","Stack","Button","varient","disabled","onClick","CloseButtonRight","onCloseFormHandler","CloseButton","UserFormTemplate","handleSubmit","handleChange","handleBlur","handleReset","values","errors","isValidUsername","isValidAge","submitDisabled","noValidate","onSubmit","UserForm","onSubmitHandler","validationSchema","Yup","min","max","required","initialValues","event","resetForm","props","App","useState","setUsers","showAddUserForm","setShowUserForm","shouldShowUserform","priorValue","Container","priorList","newList","unshift","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba5d1912.chunk.js","sourcesContent":["import Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst User = ({ username, age }) => {\n    return (\n        <Row className=\"p-1 justify-content\">\n            <Col>\n                <Card>\n                    <Card.Body>\n                        <Card.Text>{username} (  {age} {age > 1 ? \"years\" : \"year\"} old) </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>)\n}\n\nexport default User;","import { memo } from \"react\";\nimport User from \"./User\";\n\nconst UserList = memo(({ users }) => {\n\n    if (users === undefined || users.length === 0) return '';\n\n    return users.map(user => <User key={user.key} username={user.username} age={user.age} />)\n\n});\n\nexport default UserList;","import Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n\nconst FormInput = ({ id, labelValue, placeHolder, onChangeHandler, onBlur, value, message, type, touched, isInputValid }) => {\n\n    return (\n        < Row >\n            <Form.Group className=\"mb-3\" controlId={`controller-${id}`}>\n                <Form.Label>{labelValue}</Form.Label>\n                <Form.Control type={type} name={id} placeholder={placeHolder}\n                    onBlur={onBlur} onChange={onChangeHandler} value={value}\n                    isInvalid={!!touched && !isInputValid} isValid={!!touched && isInputValid} />\n                <Form.Control.Feedback type=\"invalid\">{message}</Form.Control.Feedback>\n            </Form.Group>\n        </Row >)\n}\n\nexport default FormInput;","import Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Stack from \"react-bootstrap/Stack\";\nimport Button from \"react-bootstrap/Button\";\n\nconst SubmitResetCustomButtonGroup = ({ buttonDirection, isDisabled, buttonGap, submitButtonValue, resetButtonValue, onResethandler }) => {\n\n    const direction = buttonDirection || \"horizontal\";\n    const gap = buttonGap || 2;\n\n    return (\n        <Row>\n            <Col>\n                <Stack direction={direction} gap={gap}>\n                    <Button varient=\"primary\" type=\"submit\" disabled={isDisabled}>{submitButtonValue}</Button>\n                    <Button varient=\"primary\" type=\"button\" onClick={onResethandler}>{resetButtonValue}</Button>\n                </Stack>\n            </Col>\n        </Row>\n    )\n}\n\nexport default SubmitResetCustomButtonGroup;","import Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport CloseButton from \"react-bootstrap/CloseButton\";\n\nconst CloseButtonRight = ({ onCloseFormHandler }) => {\n    return (\n        <Row >\n            <Col>\n                <CloseButton onClick={onCloseFormHandler} className=\"float-sm-end\" />\n            </Col>\n        </Row>\n    )\n}\n\nexport default CloseButtonRight;","import * as Yup from 'yup'\nimport { Formik } from 'formik'\n\nimport Form from \"react-bootstrap/Form\";\n\nimport FormInput from \"./FormInput\";\nimport SubmitResetCustomButtonGroup from \"./../Things/SubmitResetCustomButtonGroup\"\nimport CloseButtonRight from '../Things/CloseButtonRight';\n\n// Scope of userform \n// 1. validate the inputs\n// 2. after all validation completed, submit data to store\nconst UserForm = ({ onSubmitHandler, onCloseFormHandler }) => {\n\n    const onSubmitHandlerFormik = (event, { resetForm }) => {\n        onSubmitHandler(event, resetForm)\n    }\n    const validationSchema = Yup.object(\n        {\n            username: Yup.string().min(5, 'Must be >= to 5 characters').max(50, 'Must be 50 characters or less').required('Required'),\n            age: Yup.number().min(1, 'Age has to be greater than 0').max(140, 'Wowza I hope you are not that old').required('Required')\n        }\n    )\n    return (\n        <Formik initialValues={{\n            username: '',\n            age: '',\n        }}\n            validationSchema={validationSchema}\n            onSubmit={onSubmitHandlerFormik}\n        >\n            {props => <UserFormTemplate {...props} onCloseFormHandler={onCloseFormHandler} />}\n        </Formik >\n    )\n}\n\nconst UserFormTemplate = ({ handleSubmit, handleChange, handleBlur, handleReset, values, touched, errors, onCloseFormHandler }) => {\n\n    const isValidUsername = (!!touched.username === false || touched.username) && !errors.username;\n    const isValidAge = (!!touched.age === false || touched.age) && !errors.age;\n    const submitDisabled = !((touched?.username && touched?.age) && (isValidUsername && isValidAge))\n\n    return (\n        <div>\n            < Form noValidate onSubmit={handleSubmit} >\n                <CloseButtonRight onCloseFormHandler={onCloseFormHandler} />\n                <FormInput id=\"username\" type=\"text\" labelValue=\"Username\" placeHolder=\"Enter your username\"\n                    onChangeHandler={handleChange} onBlur={handleBlur} touched={touched.username}\n                    message={errors.username} value={values.username} isInputValid={isValidUsername} />\n                <FormInput id=\"age\" type=\"number\" labelValue=\"Age\" placeHolder=\"Enter your age in years\"\n                    onChangeHandler={handleChange} onBlur={handleBlur} touched={touched.age}\n                    message={errors.age} value={values.age} isInputValid={isValidAge} />\n                <SubmitResetCustomButtonGroup\n                    resetButtonValue=\"Reset Form\" submitButtonValue=\"Add User\"\n                    isDisabled={submitDisabled}\n                    onResethandler={handleReset}\n                />\n            </Form>\n        </div>)\n}\n\nexport default UserForm;","import Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nimport UserList from \"./Components/User/UserList\";\nimport UserForm from \"./Components/UserForm/UserForm\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [showAddUserForm, setShowUserForm] = useState(false);\n\n  const shouldShowUserform = () => {\n    setShowUserForm((priorValue) => !priorValue);\n  };\n\n  const onFormSubmitHandler = ({ username, age }, resetForm) => {\n    setUsers((priorList) => {\n      let newList = [...priorList];\n      newList.unshift({ key: Date.now(), username: username, age: age });\n      return newList;\n    });\n    shouldShowUserform();\n    resetForm();\n  };\n\n  return (\n    <Container className=\"p-5\">\n      <Container className=\"p-3 bg-light border rounded\">\n        {!showAddUserForm && (\n          <Button varient=\"primary\" type=\"button\" onClick={shouldShowUserform}>\n            Open User Form\n          </Button>\n        )}\n        {showAddUserForm && (\n          <Row>\n            <Col>\n              <UserForm\n                onSubmitHandler={onFormSubmitHandler}\n                onCloseFormHandler={shouldShowUserform}\n              />\n            </Col>\n          </Row>\n        )}\n      </Container>\n\n      <Container>\n        <Row>\n          <br />\n        </Row>\n      </Container>\n\n      {users.length > 0 && (\n        <Container className=\"p-3 bg-light border\">\n          <UserList users={users} />\n        </Container>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}